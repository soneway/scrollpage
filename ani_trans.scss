/*变量*/
$item_duration: 0.8s !default;

.at-item
{
    @extend %ph_palt;
    @extend %ph_full;
    @include mx_transition(all $item_duration ease);
    opacity: 0;

    @at-root
    {
        /*复位动画*/
        .current &
        {
            /*重置为默认值*/
            @include mx_transform(matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1) !important);
            opacity: 1;

            /*相应倍率的延迟后做动画*/
            @for $i from 1 through 4
            {
                &.x#{$i}
                {
                    @include mx_transition-delay($item_duration * $i);
                }
            }
        }
    }
}


/*transform函数*/
@mixin ani_trans($tx: 0, $ty: 0, $tz: 0, $sx: 1, $sy: 1, $sz: 1, $rx: 0deg, $ry: 0deg, $rz: 0deg, $kx: 0deg, $ky: 0deg) {
    $transform: '';
    @if $tx != 0 or $ty != 0 or $tz != 0
    {
        $transform: #{$transform + translate3d($tx, $ty, $tz)};
    }
    @if $sx != 1 or $sy != 1 or $sz != 1
    {
        $transform: #{$transform + scale3d($sx, $sy, $sz)};
    }
    @if $rx != 0deg
    {
        $transform: #{$transform + rotateX($rx)};
    }
    @if $ry != 0deg
    {
        $transform: #{$transform + rotateY($ry)};
    }
    @if $rz != 0deg
    {
        $transform: #{$transform + rotateZ($rz)};
    }
    @if $kx != 0deg
    {
        $transform: #{$transform + skewX($kx)};
    }
    @if $ky != 0deg
    {
        $transform: #{$transform + skewY($ky)};
    }
    @include mx_transform($transform);
    //translate3d($tx, $ty, $tz) scale3d($sx, $sy, $sz) rotateX($rx) rotateY($ry) rotateZ($rz) skewX($kx) skewY($ky)
}